----- PRODUCTION ENVIRONMENT ------
CREATE DATABASE rarytas_database;
USE rarytas_database;

----- TESTING ENVIRONMENT ------
CREATE DATABASE rarytas_testing;
USE rarytas_testing;

CREATE TABLE restaurants
(
    id      INT PRIMARY KEY AUTO_INCREMENT,
    name    VARCHAR(100) NOT NULL,
    address VARCHAR(300)
);


CREATE TABLE restaurant_table
(
    id            INT PRIMARY KEY,
    customer_name VARCHAR(50)
);


CREATE TABLE qr_scans
(
    id            INT PRIMARY KEY,
    qr_code       VARCHAR(255) NOT NULL,
    restaurant_id INT,
    table_id      INT,
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id),
    FOREIGN KEY (table_id) REFERENCES restaurant_table (id)
);


CREATE TABLE orders
(
    id             INT PRIMARY KEY AUTO_INCREMENT,
    table_id       INT,
    restaurant_id  INT,
    order_time     DATETIME       NOT NULL,
    payment_method VARCHAR(50),
    total_amount   DECIMAL(10, 2) NOT NULL,
    is_paid        BOOLEAN        NOT NULL,
    FOREIGN KEY (table_id) REFERENCES restaurant_table (id),
    FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
);

CREATE TABLE categories (
                            id INT PRIMARY KEY AUTO_INCREMENT,
                            name VARCHAR(100) NOT NULL,
                            description VARCHAR(255)
);

CREATE TABLE menu_items
(
    id           INT PRIMARY KEY AUTO_INCREMENT,
    name         VARCHAR(200)   NOT NULL,
    category_id  INT,
    description  VARCHAR(500),
    ingredients  VARCHAR(500),
    image        LONGBLOB,
    price        DECIMAL(10, 2) NOT NULL,
    is_available BOOLEAN        NOT NULL,
    created      DATETIME,
    updated      DATETIME,
    FOREIGN KEY (category_id) REFERENCES categories (id)
);


CREATE TABLE ordered_items
(
    ordered_item_id INT PRIMARY KEY,
    order_id        INT,
    quantity        INT NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders (id),
    FOREIGN KEY (ordered_item_id) REFERENCES menu_items (id)
);


CREATE TABLE waiter_calls
(
    id          INT PRIMARY KEY AUTO_INCREMENT,
    order_id    INT,
    call_time   DATETIME NOT NULL,
    is_resolved BOOLEAN  NOT NULL,
    FOREIGN KEY (order_id) REFERENCES orders (id)
);